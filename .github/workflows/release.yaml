name: Release RustOwl

on:
  push:
    tags:
      - v*

jobs:
  rustowl:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - macos-15
          - windows-2022
          - windows-11-arm

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    defaults:
      run:
        working-directory: rustowl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # We don't have rustup on the Windows 11 Arm64 runner yet, so manually installing it.
      - if: ${{ matrix.os == 'windows-11-arm' }}
        name: Install rustup
        shell: bash
        run: |
          URL='https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe'
          HASH="$(curl -sSL "${URL}.sha256")"
          curl -sSL -o ./rustup-init.exe "${URL}"
          if [ "$(sha256sum ./rustup-init.exe | cut -d' ' -f 1)" = "${HASH}" ]; then
            ./rustup-init.exe -y --no-update-default-toolchain
            echo "${USERPROFILE}\.cargo\bin" >> "${GITHUB_PATH}"
          else
            echo "::error::The SHA256 digest does not match."
            exit 1
          fi

      - name: Setup Rust
        run: rustup install
      - name: Build
        run: cargo build --release

      - name: Set host tuple to env
        shell: bash
        run: echo "host_tuple=$(rustc --print=host-tuple)" >> $GITHUB_ENV
      - name: Rename artifacts
        shell: bash
        run: |
          mkdir -p bin
          for f in $(find target/release -maxdepth 1 -perm -111 -type f); do
            BASENAME="$(basename "$f")"
            NAME="${BASENAME%%.*}";
            mv "$f" "bin/$NAME-${{ env.host_tuple }}";
          done

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: rustowl-bin-${{ env.host_tuple }}
          path: rustowl/bin/*


  vscode:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: yarn install --frozen-locked
        working-directory: ./vscode
      - name: Create VSIX
        run: yarn build
        working-directory: ./vscode

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: rustowl-vscode
          path: vscode/**/*.vsix


  release:
    runs-on: ubuntu-latest
    needs:
      - rustowl
      - vscode
    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: rustowl-*
          merge-multiple: true
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: auto RustOwl update
          files: artifacts/**/*
          draft: true
